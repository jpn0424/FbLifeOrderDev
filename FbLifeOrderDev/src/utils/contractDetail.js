import Eth from 'ethjs'
/* This used to test, because it still not sure be going to work */
//const FbEthOrderContract = require('../../ethereum/build/contracts/Fbethorder.json')
// export const CONTRACT_ABI2 = FbEthOrderContract.contrac;

export const CONTRACT_ADDRESS = '';
/* If you want to used smart cnatreat ABI, you can use this object */
export const CONTRACT_ABI = JSON.parse('[ { "constant": true, "inputs": [], "name": "fborder", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "endTime", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "address" } ], "name": "userId", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "userAmount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "maxAttendees", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "classstart", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "startTime", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "FbWallet", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "ReFEE", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "FEE", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "address" } ], "name": "useratt", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "nowtime", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "id2Addr", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [ { "name": "_FbWallet", "type": "address" }, { "name": "_maxAttendees", "type": "uint256" }, { "name": "_startTime", "type": "uint256" }, { "name": "_location", "type": "string" }, { "name": "_RegisterDay", "type": "string" }, { "name": "_Abstract", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "payable": true, "stateMutability": "payable", "type": "fallback" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "location", "type": "string" }, { "indexed": false, "name": "RegisterDay", "type": "string" }, { "indexed": false, "name": "Abstract", "type": "string" } ], "name": "ActivityInfor", "type": "event" }, { "constant": false, "inputs": [], "name": "getnow", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_attendee", "type": "address" } ], "name": "getTicket", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_endTime", "type": "uint256" } ], "name": "EndTime", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "Useratt", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "withdraw", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" } ]');
export const CONTRACT_BYTECODE = '0x608060405234801561001057600080fd5b50604051610e35380380610e3583398101806040528101908080519060200190929190805190602001909291908051906020019092919080518201929190602001805182019291906020018051820192919050505085600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846007819055506000600681905550836008819055506000600a60006101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd77d15da7aa77376f01b9742c6fd9219de74fef5d85c5dc03258e8181edab76a83838360405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610184578082015181840152602081019050610169565b50505050905090810190601f1680156101b15780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156101ea5780820151818401526020810190506101cf565b50505050905090810190601f1680156102175780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610250578082015181840152602081019050610235565b50505050905090810190601f16801561027d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505050505050610b92806102a36000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631a7200b914610107578063240c066d1461015e5780633197cbb61461018b578063376fe102146101b65780633ccfd60b1461020d5780633ec89cc4146102245780634717dea91461023b57806347688c74146102715780635f3d7fa11461029c5780635f6d3716146102c757806378e97925146102f6578063881cf1221461032157806395ff4ab114610338578063b265d22b1461038f578063c57981b5146103ba578063ef476be7146103e5578063f2c8a32714610440578063f90268cf1461046b575b610105336104d8565b005b34801561011357600080fd5b5061011c610609565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016a57600080fd5b506101896004803603810190808035906020019092919050505061062f565b005b34801561019757600080fd5b506101a06106b0565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b6565b6040518082815260200191505060405180910390f35b34801561021957600080fd5b506102226106ce565b005b34801561023057600080fd5b5061023961097d565b005b61026f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d8565b005b34801561027d57600080fd5b50610286610aa1565b6040518082815260200191505060405180910390f35b3480156102a857600080fd5b506102b1610aa7565b6040518082815260200191505060405180910390f35b3480156102d357600080fd5b506102dc610aad565b604051808215151515815260200191505060405180910390f35b34801561030257600080fd5b5061030b610ac0565b6040518082815260200191505060405180910390f35b34801561032d57600080fd5b50610336610ac6565b005b34801561034457600080fd5b5061034d610acf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039b57600080fd5b506103a4610af5565b6040518082815260200191505060405180910390f35b3480156103c657600080fd5b506103cf610b01565b6040518082815260200191505060405180910390f35b3480156103f157600080fd5b50610426600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0d565b604051808215151515815260200191505060405180910390f35b34801561044c57600080fd5b50610455610b2d565b6040518082815260200191505060405180910390f35b34801561047757600080fd5b5061049660048036038101908080359060200190929190505050610b33565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60085442101580156104f257506706f05b59d3b200003410155b801561053d57506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561054857600080fd5b6006600081548092919060010191905055506007546006541115151561056d57600080fd5b600654600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600080600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561068b57600080fd5b806009819055506001600a60006101000a81548160ff02191690831515021790555050565b60095481565b60016020528060005260406000206000915090505481565b60003373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561072c57600080fd5b600190505b600654811115156108fa57600015156002600080600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156107cc576108ed565b607860095401421115156108605760008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6702c68af0bb1400009081150290604051600060405180830381858888f1935050505015801561085a573d6000803e3d6000fd5b506108ec565b60008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00006702c68af0bb140000019081150290604051600060405180830381858888f193505050501580156108ea573d6000803e3d6000fd5b505b5b8080600101915050610731565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b5050565b60011515600a60009054906101000a900460ff1615151480156109e057506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b8015610a3c575060001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b1515610a4757600080fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60065481565b60075481565b600a60009054906101000a900460ff1681565b60085481565b42600581905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6702c68af0bb14000081565b6706f05b59d3b2000081565b60026020528060005260406000206000915054906101000a900460ff1681565b60055481565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820a774a1f6548b7c66dbd1e5ffeacf52e6ea0417504ef0696468030e39a034c8230029';
export const GAS_PRICE = Eth.toWei(5, 'Gwei');
export const GAS_LIMIT = 1000000;
export const FEE = 0.015;
export const INTERVAL_TIME = 0;

// Need to set Time (GMT+8)
export const REGISTRATION_TIME = 0;
export const PRODUCTION = true;                     // Use Ropsten or localchain
export const NETWORK_ID = PRODUCTION ? '1' : '3';   // 1 = ropsten, 3 = localchain
export const NETWORK_NAME = PRODUCTION ? 'Ropsten' : 'localchain';
export const ETHERSCAN_URL = 'https://ropsten.etherscan.io';
